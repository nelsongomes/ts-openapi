// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/openapi/openapi-mingle Mingle services Simple service remap from local file and remote uri 1`] = `
Object {
  "info": Object {
    "contact": Object {
      "email": "nelson.ricardo.gomes@gmail.com",
    },
    "description": "Some test api",
    "license": Object {
      "name": "license",
      "url": "http://license",
    },
    "termsOfService": "http://terms",
    "title": "Server API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/openapi/clients": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "clientLanguages",
        "parameters": Array [
          Object {
            "$ref": "#/components/parameters/version",
          },
          Object {
            "description": "flag to only return languages of type \`client\`",
            "in": "query",
            "name": "clientOnly",
            "schema": Object {
              "default": false,
              "type": "boolean",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Deprecated, use '/{type}/{version}' instead. List generator languages of type 'client' or 'documentation' for given codegen version (defaults to V3)",
        "tags": Array [
          "clients",
          "documentation",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/documentation": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "documentationLanguages",
        "parameters": Array [
          Object {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Deprecated, use '/{type}/{version}' instead. List generator languages of type 'documentation' for given codegen version (defaults to V3)",
        "tags": Array [
          "documentation",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/generate": Object {
      "get": Object {
        "operationId": "generateFromURL",
        "parameters": Array [
          Object {
            "in": "query",
            "name": "codegenOptionsURL",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/octet-stream": Object {
                "schema": Object {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Generates and download code. GenerationRequest input provided as JSON available at URL specified in parameter codegenOptionsURL.",
        "tags": Array [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
      "post": Object {
        "operationId": "generate",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/GenerationRequest",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/octet-stream": Object {
                "schema": Object {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Generates and download code. GenerationRequest input provided as request body.",
        "tags": Array [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/options": Object {
      "get": Object {
        "operationId": "listOptions",
        "parameters": Array [
          Object {
            "description": "language",
            "in": "query",
            "name": "language",
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "additionalProperties": Object {
                    "$ref": "#/components/schemas/CliOption",
                  },
                  "type": "object",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Returns options for a given language and version (defaults to V3)",
        "tags": Array [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/servers": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "serverLanguages",
        "parameters": Array [
          Object {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Deprecated, use '/{type}/{version}' instead. List generator languages of type 'server' for given codegen version (defaults to V3)",
        "tags": Array [
          "servers",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/types": Object {
      "get": Object {
        "operationId": "languagesMulti",
        "parameters": Array [
          Object {
            "$ref": "#/components/parameters/types",
          },
          Object {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "List generator languages of version defined in 'version parameter (defaults to V3) and type included in 'types' parameter; all languages",
        "tags": Array [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/{type}/{version}": Object {
      "get": Object {
        "operationId": "languages",
        "parameters": Array [
          Object {
            "$ref": "#/components/parameters/type",
          },
          Object {
            "description": "generator version used by codegen engine",
            "in": "path",
            "name": "version",
            "required": true,
            "schema": Object {
              "enum": Array [
                "V2",
                "V3",
              ],
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "List generator languages of the given type and version",
        "tags": Array [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/users/{userId}": Object {
      "patch": Object {
        "description": "Test endpoint",
        "operationId": "id",
        "parameters": Array [
          Object {
            "description": "ID of user",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": Object {
              "format": "int64",
              "minimum": "1.0",
              "type": "integer",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "example": Object {
                "integer": 123,
                "password": "*******",
                "username": "johndoe@acme.com",
              },
              "schema": Object {
                "description": "Full body description.",
                "properties": Object {
                  "array": Object {
                    "items": Object {
                      "description": "Parameter without description.",
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "arrayOfs": Object {
                    "items": Object {
                      "description": "Parameter without description.",
                      "properties": Object {
                        "internalString": Object {
                          "description": "Parameter without description.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "boolean": Object {
                    "description": "Parameter without description.",
                    "type": "boolean",
                  },
                  "date": Object {
                    "description": "Parameter without description. (min:10 chars, max:10 chars, date:yyyy-mm-dd)",
                    "format": "date",
                    "type": "string",
                  },
                  "dateTime": Object {
                    "description": "Parameter without description. (max:24 chars, ISO8601 date-time format)",
                    "format": "date-time",
                    "type": "string",
                  },
                  "integer": Object {
                    "description": "Parameter without description.",
                    "format": "int64",
                    "type": "integer",
                  },
                  "number": Object {
                    "description": "Parameter without description.",
                    "format": "double",
                    "type": "number",
                  },
                  "object": Object {
                    "description": "Parameter without description.",
                    "properties": Object {
                      "internalString": Object {
                        "description": "Parameter without description.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "string": Object {
                    "description": "Username",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Full body description.",
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "text-plain": Object {},
            },
            "description": "Successful operation.",
          },
        },
        "summary": "Server Test",
        "tags": Array [
          "Internals",
        ],
      },
    },
  },
  "servers": Array [
    Object {
      "url": "https://explorer-eu.awesome-api.com",
    },
    Object {
      "url": "https://explorer-us.awesome-api.com",
    },
  ],
}
`;

exports[`src/openapi/openapi-mingle Mingle services Simple service remap from private path /public/:userId to public /users/{userId}, skipping other methods, from file 1`] = `
Object {
  "info": Object {
    "contact": Object {
      "email": "nelson.ricardo.gomes@gmail.com",
    },
    "description": "Some test api",
    "license": Object {
      "name": "license",
      "url": "http://license",
    },
    "termsOfService": "http://terms",
    "title": "Server API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/users/{userId}": Object {
      "patch": Object {
        "description": "Test endpoint",
        "operationId": "id",
        "parameters": Array [
          Object {
            "description": "ID of user",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": Object {
              "format": "int64",
              "minimum": "1.0",
              "type": "integer",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "example": Object {
                "integer": 123,
                "password": "*******",
                "username": "johndoe@acme.com",
              },
              "schema": Object {
                "description": "Full body description.",
                "properties": Object {
                  "array": Object {
                    "items": Object {
                      "description": "Parameter without description.",
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "arrayOfs": Object {
                    "items": Object {
                      "description": "Parameter without description.",
                      "properties": Object {
                        "internalString": Object {
                          "description": "Parameter without description.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "boolean": Object {
                    "description": "Parameter without description.",
                    "type": "boolean",
                  },
                  "date": Object {
                    "description": "Parameter without description. (min:10 chars, max:10 chars, date:yyyy-mm-dd)",
                    "format": "date",
                    "type": "string",
                  },
                  "dateTime": Object {
                    "description": "Parameter without description. (max:24 chars, ISO8601 date-time format)",
                    "format": "date-time",
                    "type": "string",
                  },
                  "integer": Object {
                    "description": "Parameter without description.",
                    "format": "int64",
                    "type": "integer",
                  },
                  "number": Object {
                    "description": "Parameter without description.",
                    "format": "double",
                    "type": "number",
                  },
                  "object": Object {
                    "description": "Parameter without description.",
                    "properties": Object {
                      "internalString": Object {
                        "description": "Parameter without description.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "string": Object {
                    "description": "Username",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Full body description.",
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "text-plain": Object {},
            },
            "description": "Successful operation.",
          },
        },
        "summary": "Server Test",
        "tags": Array [
          "Internals",
        ],
      },
    },
  },
  "servers": Array [
    Object {
      "url": "https://explorer-eu.awesome-api.com",
    },
    Object {
      "url": "https://explorer-us.awesome-api.com",
    },
  ],
}
`;

exports[`src/openapi/openapi-mingle Mingle services Simple service remap from private path /public/:userId to public /users/{userId}, skipping other methods, from remote 1`] = `
Object {
  "info": Object {
    "contact": Object {
      "email": "nelson.ricardo.gomes@gmail.com",
    },
    "description": "Some test api",
    "license": Object {
      "name": "license",
      "url": "http://license",
    },
    "termsOfService": "http://terms",
    "title": "Server API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/users/{userId}": Object {
      "patch": Object {
        "description": "Test endpoint",
        "operationId": "id",
        "parameters": Array [
          Object {
            "description": "ID of user",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": Object {
              "format": "int64",
              "minimum": "1.0",
              "type": "integer",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "example": Object {
                "integer": 123,
                "password": "*******",
                "username": "johndoe@acme.com",
              },
              "schema": Object {
                "description": "Full body description.",
                "properties": Object {
                  "array": Object {
                    "items": Object {
                      "description": "Parameter without description.",
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "arrayOfs": Object {
                    "items": Object {
                      "description": "Parameter without description.",
                      "properties": Object {
                        "internalString": Object {
                          "description": "Parameter without description.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "boolean": Object {
                    "description": "Parameter without description.",
                    "type": "boolean",
                  },
                  "date": Object {
                    "description": "Parameter without description. (min:10 chars, max:10 chars, date:yyyy-mm-dd)",
                    "format": "date",
                    "type": "string",
                  },
                  "dateTime": Object {
                    "description": "Parameter without description. (max:24 chars, ISO8601 date-time format)",
                    "format": "date-time",
                    "type": "string",
                  },
                  "integer": Object {
                    "description": "Parameter without description.",
                    "format": "int64",
                    "type": "integer",
                  },
                  "number": Object {
                    "description": "Parameter without description.",
                    "format": "double",
                    "type": "number",
                  },
                  "object": Object {
                    "description": "Parameter without description.",
                    "properties": Object {
                      "internalString": Object {
                        "description": "Parameter without description.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "string": Object {
                    "description": "Username",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Full body description.",
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "text-plain": Object {},
            },
            "description": "Successful operation.",
          },
        },
        "summary": "Server Test",
        "tags": Array [
          "Internals",
        ],
      },
    },
  },
  "servers": Array [
    Object {
      "url": "https://explorer-eu.awesome-api.com",
    },
    Object {
      "url": "https://explorer-us.awesome-api.com",
    },
  ],
}
`;
