// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/openapi/openapi-mingle Mingle services Simple service remap from local file and remote uri 1`] = `
{
  "components": {
    "parameters": {
      "type": {
        "description": "generator type",
        "in": "path",
        "name": "type",
        "required": true,
        "schema": {
          "enum": [
            "client",
            "server",
            "documentation",
            "config",
          ],
          "type": "string",
        },
      },
      "types": {
        "description": "comma-separated list of generator types",
        "explode": false,
        "in": "query",
        "name": "types",
        "required": true,
        "schema": {
          "items": {
            "enum": [
              "client",
              "server",
              "documentation",
              "config",
            ],
            "type": "string",
          },
          "type": "array",
        },
        "style": "form",
      },
      "version": {
        "description": "generator version used by codegen engine",
        "in": "query",
        "name": "version",
        "schema": {
          "enum": [
            "V2",
            "V3",
          ],
          "type": "string",
        },
      },
    },
    "schemas": {
      "AuthorizationValue": {
        "description": "adds authorization headers when fetching the open api definitions remotely. Pass in an authorizationValue object",
        "properties": {
          "keyName": {
            "description": "Authorization key",
            "type": "string",
          },
          "type": {
            "description": "Authorization type",
            "type": "string",
          },
          "value": {
            "description": "Authorization value",
            "type": "string",
          },
        },
        "title": "authorization",
        "type": "object",
        "x-swagger-router-model": "io.swagger.v3.parser.core.models.AuthorizationValue",
      },
      "CliOption": {
        "properties": {
          "default": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "enum": {
            "additionalProperties": {
              "type": "string",
            },
            "type": "object",
          },
          "optionName": {
            "type": "string",
          },
          "type": {
            "description": "Data type is based on the types supported by the JSON-Schema",
            "type": "string",
          },
        },
        "type": "object",
      },
      "GenerationRequest": {
        "properties": {
          "codegenVersion": {
            "description": "codegen version to use",
            "enum": [
              "V2",
              "V3",
            ],
            "type": "string",
          },
          "lang": {
            "description": "language to generate (required)",
            "example": "java",
            "title": "language",
            "type": "string",
          },
          "options": {
            "$ref": "#/components/schemas/Options",
          },
          "spec": {
            "description": "spec in json format. . Alternative to \`specURL\`",
            "type": "object",
          },
          "specURL": {
            "description": "URL of the spec in json format. Alternative to \`spec\`",
            "type": "string",
          },
          "type": {
            "description": "type of the spec",
            "enum": [
              "CLIENT",
              "SERVER",
              "DOCUMENTATION",
              "CONFIG",
            ],
            "type": "string",
          },
        },
        "required": [
          "lang",
        ],
        "type": "object",
        "x-swagger-router-model": "io.swagger.codegen.v3.service.GenerationRequest",
      },
      "Options": {
        "properties": {
          "additionalProperties": {
            "additionalProperties": {
              "type": "object",
            },
            "description": "sets additional properties that can be referenced by the mustache templates in key/value format.",
            "title": "additional properties",
            "type": "object",
          },
          "apiPackage": {
            "description": "package for generated api classes",
            "title": "api package",
            "type": "string",
          },
          "artifactId": {
            "description": "artifactId in generated pom.xml",
            "title": "artifact id",
            "type": "string",
          },
          "artifactVersion": {
            "description": "artifact version generated in pom.xml",
            "title": "artifact version",
            "type": "string",
          },
          "auth": {
            "description": "adds authorization headers when fetching the open api definitions remotely. Pass in a URL-encoded string of name:header with a comma separating multiple values",
            "title": "authorization",
            "type": "string",
          },
          "authorizationValue": {
            "$ref": "#/components/schemas/AuthorizationValue",
          },
          "gitRepoId": {
            "description": "Git repo ID, e.g. swagger-codegen.",
            "title": "git repo id",
            "type": "string",
          },
          "gitUserId": {
            "description": "Git user ID, e.g. swagger-api.",
            "title": "git user id",
            "type": "string",
          },
          "groupId": {
            "description": "groupId in generated pom.xml",
            "title": "group id",
            "type": "string",
          },
          "httpUserAgent": {
            "description": "HTTP user agent, e.g. codegen_csharp_api_client, default to 'Swagger-Codegen/{packageVersion}}/{language}'",
            "title": "http user agent",
            "type": "string",
          },
          "ignoreFileOverride": {
            "description": "Specifies an override location for the .swagger-codegen-ignore file. Most useful on initial generation.",
            "title": "ignore file override location",
            "type": "string",
          },
          "importMappings": {
            "additionalProperties": {
              "type": "string",
            },
            "description": "specifies mappings between a given class and the import that should be used for that class in key/value format.",
            "title": "import mappings",
            "type": "object",
          },
          "instantiationTypes": {
            "additionalProperties": {
              "type": "string",
            },
            "description": "sets instantiation type mappings in key/value format. For example (in Java): array=ArrayList,map=HashMap. In other words array types will get instantiated as ArrayList in generated code.",
            "title": "instantiation types",
            "type": "object",
          },
          "invokerPackage": {
            "description": "root package for generated code",
            "title": "invoker package",
            "type": "string",
          },
          "languageSpecificPrimitives": {
            "description": "specifies additional language specific primitive types in the format of type1,type2,type3,type3. For example: String,boolean,Boolean,Double. You can also have multiple occurrences of this option.",
            "items": {
              "type": "string",
            },
            "title": "language specific primitives",
            "type": "array",
          },
          "library": {
            "description": "library template (sub-template)",
            "title": "library",
            "type": "string",
          },
          "modelNamePrefix": {
            "description": "Prefix that will be prepended to all model names. Default is the empty string.",
            "title": "model name prefix",
            "type": "string",
          },
          "modelNameSuffix": {
            "description": "PrefixSuffix that will be appended to all model names. Default is the empty string.",
            "title": "model name suffix",
            "type": "string",
          },
          "modelPackage": {
            "description": "package for generated models",
            "title": "model package",
            "type": "string",
          },
          "releaseNote": {
            "description": "Release note, default to 'Minor update'.",
            "title": "release note",
            "type": "string",
          },
          "removeOperationIdPrefix": {
            "description": "Remove prefix of operationId, e.g. config_getId => getId",
            "title": "remove prefix of the operationId",
            "type": "boolean",
          },
          "reservedWordsMappings": {
            "additionalProperties": {
              "type": "string",
            },
            "description": "pecifies how a reserved name should be escaped to. Otherwise, the default _<name> is used. For example id=identifier.",
            "title": "reserved words mappings",
            "type": "object",
          },
          "skipOverride": {
            "type": "boolean",
          },
          "systemProperties": {
            "additionalProperties": {
              "type": "string",
            },
            "description": "sets specified system properties in key/value format",
            "title": "System Properties",
            "type": "object",
          },
          "templateVersion": {
            "description": "template version for generation",
            "title": "Template Version",
            "type": "string",
          },
          "typeMappings": {
            "additionalProperties": {
              "type": "string",
            },
            "description": "sets mappings between swagger spec types and generated code types in key/value format. For example: array=List,map=Map,string=String.",
            "title": "type mappings",
            "type": "object",
          },
        },
        "type": "object",
        "x-swagger-router-model": "io.swagger.codegen.v3.service.Options",
      },
    },
  },
  "info": {
    "contact": {
      "email": "nelson.ricardo.gomes@gmail.com",
    },
    "description": "Some test api",
    "license": {
      "name": "license",
      "url": "http://license",
    },
    "termsOfService": "http://terms",
    "title": "Server API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/openapi/clients": {
      "get": {
        "deprecated": true,
        "operationId": "clientLanguages",
        "parameters": [
          {
            "$ref": "#/components/parameters/version",
          },
          {
            "description": "flag to only return languages of type \`client\`",
            "in": "query",
            "name": "clientOnly",
            "schema": {
              "default": false,
              "type": "boolean",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Deprecated, use '/{type}/{version}' instead. List generator languages of type 'client' or 'documentation' for given codegen version (defaults to V3)",
        "tags": [
          "clients",
          "documentation",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/documentation": {
      "get": {
        "deprecated": true,
        "operationId": "documentationLanguages",
        "parameters": [
          {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Deprecated, use '/{type}/{version}' instead. List generator languages of type 'documentation' for given codegen version (defaults to V3)",
        "tags": [
          "documentation",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/generate": {
      "get": {
        "operationId": "generateFromURL",
        "parameters": [
          {
            "in": "query",
            "name": "codegenOptionsURL",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Generates and download code. GenerationRequest input provided as JSON available at URL specified in parameter codegenOptionsURL.",
        "tags": [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
      "post": {
        "operationId": "generate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Generates and download code. GenerationRequest input provided as request body.",
        "tags": [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/options": {
      "get": {
        "operationId": "listOptions",
        "parameters": [
          {
            "description": "language",
            "in": "query",
            "name": "language",
            "schema": {
              "type": "string",
            },
          },
          {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CliOption",
                  },
                  "type": "object",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Returns options for a given language and version (defaults to V3)",
        "tags": [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/servers": {
      "get": {
        "deprecated": true,
        "operationId": "serverLanguages",
        "parameters": [
          {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "Deprecated, use '/{type}/{version}' instead. List generator languages of type 'server' for given codegen version (defaults to V3)",
        "tags": [
          "servers",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/types": {
      "get": {
        "operationId": "languagesMulti",
        "parameters": [
          {
            "$ref": "#/components/parameters/types",
          },
          {
            "$ref": "#/components/parameters/version",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "List generator languages of version defined in 'version parameter (defaults to V3) and type included in 'types' parameter; all languages",
        "tags": [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/openapi/{type}/{version}": {
      "get": {
        "operationId": "languages",
        "parameters": [
          {
            "$ref": "#/components/parameters/type",
          },
          {
            "description": "generator version used by codegen engine",
            "in": "path",
            "name": "version",
            "required": true,
            "schema": {
              "enum": [
                "V2",
                "V3",
              ],
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
            },
            "description": "successful operation",
          },
        },
        "summary": "List generator languages of the given type and version",
        "tags": [
          "clients",
          "servers",
          "documentation",
          "config",
        ],
        "x-swagger-router-controller": "io.swagger.v3.generator.online.GeneratorController",
      },
    },
    "/users/{userId}": {
      "patch": {
        "description": "Test endpoint",
        "operationId": "id",
        "parameters": [
          {
            "description": "ID of user",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "int64",
              "minimum": 1,
              "type": "integer",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "integer": 123,
                "password": "*******",
                "username": "johndoe@acme.com",
              },
              "schema": {
                "description": "Full body description.",
                "properties": {
                  "array": {
                    "items": {
                      "description": "Parameter without description.",
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "arrayOfs": {
                    "items": {
                      "description": "Parameter without description.",
                      "properties": {
                        "internalString": {
                          "description": "Parameter without description.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "boolean": {
                    "description": "Parameter without description.",
                    "type": "boolean",
                  },
                  "date": {
                    "description": "Parameter without description. (min:10 chars, max:10 chars, date:yyyy-mm-dd)",
                    "format": "date",
                    "type": "string",
                  },
                  "dateTime": {
                    "description": "Parameter without description. (max:24 chars, ISO8601 date-time format)",
                    "format": "date-time",
                    "type": "string",
                  },
                  "integer": {
                    "description": "Parameter without description.",
                    "format": "int64",
                    "type": "integer",
                  },
                  "number": {
                    "description": "Parameter without description.",
                    "format": "double",
                    "type": "number",
                  },
                  "object": {
                    "description": "Parameter without description.",
                    "properties": {
                      "internalString": {
                        "description": "Parameter without description.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "string": {
                    "description": "Username",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Full body description.",
        },
        "responses": {
          "200": {
            "content": {
              "text-plain": {},
            },
            "description": "Successful operation.",
          },
        },
        "summary": "Server Test",
        "tags": [
          "Internals",
        ],
      },
    },
  },
  "servers": [
    {
      "url": "https://explorer-eu.awesome-api.com",
    },
    {
      "url": "https://explorer-us.awesome-api.com",
    },
  ],
}
`;

exports[`src/openapi/openapi-mingle Mingle services Simple service remap from private path /public/:userId to public /users/{userId}, skipping other methods, from file 1`] = `
{
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http",
      },
    },
  },
  "info": {
    "contact": {
      "email": "nelson.ricardo.gomes@gmail.com",
    },
    "description": "Some test api",
    "license": {
      "name": "license",
      "url": "http://license",
    },
    "termsOfService": "http://terms",
    "title": "Server API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/users/{userId}": {
      "patch": {
        "description": "Test endpoint",
        "operationId": "id",
        "parameters": [
          {
            "description": "ID of user",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "int64",
              "minimum": 1,
              "type": "integer",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "integer": 123,
                "password": "*******",
                "username": "johndoe@acme.com",
              },
              "schema": {
                "description": "Full body description.",
                "properties": {
                  "array": {
                    "items": {
                      "description": "Parameter without description.",
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "arrayOfs": {
                    "items": {
                      "description": "Parameter without description.",
                      "properties": {
                        "internalString": {
                          "description": "Parameter without description.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "boolean": {
                    "description": "Parameter without description.",
                    "type": "boolean",
                  },
                  "date": {
                    "description": "Parameter without description. (min:10 chars, max:10 chars, date:yyyy-mm-dd)",
                    "format": "date",
                    "type": "string",
                  },
                  "dateTime": {
                    "description": "Parameter without description. (max:24 chars, ISO8601 date-time format)",
                    "format": "date-time",
                    "type": "string",
                  },
                  "integer": {
                    "description": "Parameter without description.",
                    "format": "int64",
                    "type": "integer",
                  },
                  "number": {
                    "description": "Parameter without description.",
                    "format": "double",
                    "type": "number",
                  },
                  "object": {
                    "description": "Parameter without description.",
                    "properties": {
                      "internalString": {
                        "description": "Parameter without description.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "string": {
                    "description": "Username",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Full body description.",
        },
        "responses": {
          "200": {
            "content": {
              "text-plain": {},
            },
            "description": "Successful operation.",
          },
        },
        "summary": "Server Test",
        "tags": [
          "Internals",
        ],
      },
    },
  },
  "security": [
    {
      "basicAuth": [],
    },
  ],
  "servers": [
    {
      "url": "https://explorer-eu.awesome-api.com",
    },
    {
      "url": "https://explorer-us.awesome-api.com",
    },
  ],
}
`;

exports[`src/openapi/openapi-mingle Mingle services Simple service remap from private path /public/:userId to public /users/{userId}, skipping other methods, from remote 1`] = `
{
  "info": {
    "contact": {
      "email": "nelson.ricardo.gomes@gmail.com",
    },
    "description": "Some test api",
    "license": {
      "name": "license",
      "url": "http://license",
    },
    "termsOfService": "http://terms",
    "title": "Server API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/users/{userId}": {
      "patch": {
        "description": "Test endpoint",
        "operationId": "id",
        "parameters": [
          {
            "description": "ID of user",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "format": "int64",
              "minimum": 1,
              "type": "integer",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "integer": 123,
                "password": "*******",
                "username": "johndoe@acme.com",
              },
              "schema": {
                "description": "Full body description.",
                "properties": {
                  "array": {
                    "items": {
                      "description": "Parameter without description.",
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "arrayOfs": {
                    "items": {
                      "description": "Parameter without description.",
                      "properties": {
                        "internalString": {
                          "description": "Parameter without description.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "boolean": {
                    "description": "Parameter without description.",
                    "type": "boolean",
                  },
                  "date": {
                    "description": "Parameter without description. (min:10 chars, max:10 chars, date:yyyy-mm-dd)",
                    "format": "date",
                    "type": "string",
                  },
                  "dateTime": {
                    "description": "Parameter without description. (max:24 chars, ISO8601 date-time format)",
                    "format": "date-time",
                    "type": "string",
                  },
                  "integer": {
                    "description": "Parameter without description.",
                    "format": "int64",
                    "type": "integer",
                  },
                  "number": {
                    "description": "Parameter without description.",
                    "format": "double",
                    "type": "number",
                  },
                  "object": {
                    "description": "Parameter without description.",
                    "properties": {
                      "internalString": {
                        "description": "Parameter without description.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "string": {
                    "description": "Username",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Full body description.",
        },
        "responses": {
          "200": {
            "content": {
              "text-plain": {},
            },
            "description": "Successful operation.",
          },
        },
        "summary": "Server Test",
        "tags": [
          "Internals",
        ],
      },
    },
  },
  "servers": [
    {
      "url": "https://explorer-eu.awesome-api.com",
    },
    {
      "url": "https://explorer-us.awesome-api.com",
    },
  ],
}
`;
